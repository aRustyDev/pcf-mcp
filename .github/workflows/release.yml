name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  GO_VERSION: "1.23"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Load signing key from 1Password
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          GORELEASER_KEY: op://PCF-MCP/GoReleaser/signing_key

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ env.GORELEASER_KEY }}

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: dist/

  docker-release:
    name: Build Release Docker Images
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load Docker credentials from 1Password
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          DOCKERHUB_USERNAME: op://PCF-MCP/DockerHub/username
          DOCKERHUB_TOKEN: op://PCF-MCP/DockerHub/token
          GHCR_TOKEN: op://PCF-MCP/GitHub/packages_write_token

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.GHCR_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/pcf-mcp
            ghcr.io/${{ github.repository_owner }}/pcf-mcp
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

      - name: Sign container images
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          VERSION=${GITHUB_REF#refs/tags/}

          # Sign Docker Hub images
          cosign sign --yes ${{ env.DOCKERHUB_USERNAME }}/pcf-mcp:${VERSION}
          cosign sign --yes ${{ env.DOCKERHUB_USERNAME }}/pcf-mcp:latest

          # Sign GHCR images
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/pcf-mcp:${VERSION}
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/pcf-mcp:latest

      - name: Create attestation
        run: |
          VERSION=${GITHUB_REF#refs/tags/}

          # Create SBOM attestation
          cosign attest --yes --type spdx \
            --predicate sbom.spdx.json \
            ${{ env.DOCKERHUB_USERNAME }}/pcf-mcp:${VERSION}

          cosign attest --yes --type spdx \
            --predicate sbom.spdx.json \
            ghcr.io/${{ github.repository_owner }}/pcf-mcp:${VERSION}
